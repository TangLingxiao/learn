#ifndef _BEHAVIOR_TREE_TYPES
#define _BEHAVIOR_TREE_TYPES

namespace BT
{
	enum ENodeStatus
	{
		E_NODE_SUCCESS,
		E_NODE_FAILURE,
	};

	enum EHPCondition
	{
		E_HP_NUM,
		E_HP_PERCENT,
	};

	enum ECampCondition
	{
		E_CAMP_SELF = 0,
		E_CAMP_OTHER,
	};

	enum ENumericCondition
	{
		E_NUMERIC_ATTACK,
		E_NUMERIC_DEF,
		E_NUMERIC_CRI,
		E_NUMERIC_DOMAGE,
		E_NUMERIC_SPEED,
	};

	enum EFighterCondition
	{
		E_FIGHTER_COUNT,
		E_FIGHTER_ID,
	};

	enum ERangeCondition
	{
		E_RANGE_NUM,
		E_RANGE_MIN,
		E_RANGE_MAX,
	};

	enum EPosCondition
	{
		E_POS_FRONT = 0,
		E_POS_MIDDLE,
		E_POS_BACK,
		E_POS_FRONT_ASSIST,
		E_POS_MIDDLE_ASSIST,
		E_POS_BACK_ASSIST,
	};
	//enum EStateCondition
	//{
	//	E_STATE_NONE,
	//	E_STATE_IMMUNE,
	//	E_STATE_DIZZY,
	//	E_STATE_FREEZE,
	//	E_STATE_NUMB,
	//	E_STATE_ARMOR,
	//	E_STATE_SILENCE,
	//};

	enum EOperator
	{
		E_OPERATOR_ERR,
		E_OPERATOR_LT,//<
		E_OPERATOR_LE,//<=
		E_OPERATOR_EQ,//==
		E_OPERATOR_GT,//>
		E_OPERATOR_GE,//>=
		E_OPERATOR_NE,//!=
	};

	enum ENodeType
	{
		E_TYPE_NONE = 0,
		E_TYPE_ACTION,
		E_TYPE_CONDITION,
		E_TYPE_COMPOSITE,
		//E_TYPE_LOOP,
		E_TYPE_SEQUENCE,
		E_TYPE_SELECT,
		//条件节点类型
		E_TYPE_CONDITION_HP,
		E_TYPE_CONDITION_RAGE,
		E_TYPE_CONDITION_ATTR,
		E_TYPE_CONDITION_ENERGY,
		E_TYPE_CONDITION_NUMERIC,
		E_TYPE_CONDITION_PROB,
		E_TYPE_CONDITION_ROUND,
		E_TYPE_CONDITION_CLASS,
		E_TYPE_CONDITION_FIGHTER,
		E_TYPE_CONDITION_TEAM,
		E_TYPE_CONDITION_LEVEL,
		E_TYPE_CONDITION_TURN,
		E_TYPE_CONDITION_STATE,
		//行为节点类型
		E_TYPE_ACTION_EXEC,
		E_TYPE_ACTION_SAFE,
		E_TYPE_ACTION_HIT,
		E_TYPE_ACTION_SKILL,
		E_TYPE_ACTION_SUPER,
		E_TYPE_ACTION_EXPLOSION,
		E_TYPE_ACTION_CHANGE,
		E_TYPE_ACTION_TEAMSKILL,
		E_TYPE_ACTION_OTHER,
		//选择目标条件类型
		E_TYPE_CONDITION_SELECT_HP,
		E_TYPE_CONDITION_SELECT_ATTR,
		E_TYPE_CONDITION_SELECT_RAGE,
		E_TYPE_CONDITION_SELECT_NUMERIC,
		E_TYPE_CONDITION_SELECT_PROB,
		E_TYPE_CONDITION_SELECT_FIGHTER,
		E_TYPE_CONDITION_SELECT_LEVEL,
		E_TYPE_CONDITION_SELECT_STATE,
	};

	enum ESelectAction
	{
		E_SELECT_NONE,
		E_SELECT_HIT,
		E_SELECT_SKILL,
		E_SELECT_SUPER,
		E_SELECT_EXPLOSION,
		E_SELECT_CHANGE,
		E_SELECT_TEAMSKILL,
		E_SELECT_OTHER,
	};

}

#endif